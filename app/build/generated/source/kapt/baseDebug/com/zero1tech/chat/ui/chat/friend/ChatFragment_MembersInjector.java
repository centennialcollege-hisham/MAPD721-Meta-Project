// Generated by Dagger (https://dagger.dev).
package com.zero1tech.chat.ui.chat.friend;

import com.example.data.prefs.Prefs;
import com.zero1tech.chat.AnalyticsDispatcher;
import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ChatFragment_MembersInjector implements MembersInjector<ChatFragment> {
  private final Provider<AnalyticsDispatcher> analyticsDispatcherProvider;

  private final Provider<Prefs> prefsProvider;

  public ChatFragment_MembersInjector(Provider<AnalyticsDispatcher> analyticsDispatcherProvider,
      Provider<Prefs> prefsProvider) {
    this.analyticsDispatcherProvider = analyticsDispatcherProvider;
    this.prefsProvider = prefsProvider;
  }

  public static MembersInjector<ChatFragment> create(
      Provider<AnalyticsDispatcher> analyticsDispatcherProvider, Provider<Prefs> prefsProvider) {
    return new ChatFragment_MembersInjector(analyticsDispatcherProvider, prefsProvider);
  }

  @Override
  public void injectMembers(ChatFragment instance) {
    injectAnalyticsDispatcher(instance, analyticsDispatcherProvider.get());
    injectPrefs(instance, prefsProvider.get());
  }

  @InjectedFieldSignature("com.zero1tech.chat.ui.chat.friend.ChatFragment.analyticsDispatcher")
  public static void injectAnalyticsDispatcher(ChatFragment instance,
      AnalyticsDispatcher analyticsDispatcher) {
    instance.analyticsDispatcher = analyticsDispatcher;
  }

  @InjectedFieldSignature("com.zero1tech.chat.ui.chat.friend.ChatFragment.prefs")
  public static void injectPrefs(ChatFragment instance, Prefs prefs) {
    instance.prefs = prefs;
  }
}
