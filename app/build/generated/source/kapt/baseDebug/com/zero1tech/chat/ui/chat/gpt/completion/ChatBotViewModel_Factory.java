// Generated by Dagger (https://dagger.dev).
package com.zero1tech.chat.ui.chat.gpt.completion;

import com.example.data.repoistory.chat.ChatRepository;
import com.example.data.repoistory.openai.OpenaiRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ChatBotViewModel_Factory implements Factory<ChatBotViewModel> {
  private final Provider<ChatRepository> chatRepositoryProvider;

  private final Provider<OpenaiRepository> openaiRepositoryProvider;

  public ChatBotViewModel_Factory(Provider<ChatRepository> chatRepositoryProvider,
      Provider<OpenaiRepository> openaiRepositoryProvider) {
    this.chatRepositoryProvider = chatRepositoryProvider;
    this.openaiRepositoryProvider = openaiRepositoryProvider;
  }

  @Override
  public ChatBotViewModel get() {
    return newInstance(chatRepositoryProvider.get(), openaiRepositoryProvider.get());
  }

  public static ChatBotViewModel_Factory create(Provider<ChatRepository> chatRepositoryProvider,
      Provider<OpenaiRepository> openaiRepositoryProvider) {
    return new ChatBotViewModel_Factory(chatRepositoryProvider, openaiRepositoryProvider);
  }

  public static ChatBotViewModel newInstance(ChatRepository chatRepository,
      OpenaiRepository openaiRepository) {
    return new ChatBotViewModel(chatRepository, openaiRepository);
  }
}
