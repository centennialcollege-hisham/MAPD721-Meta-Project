// Generated by Dagger (https://dagger.dev).
package com.zero1tech.chat.ui.friends;

import com.example.data.prefs.Prefs;
import com.zero1tech.chat.AnalyticsDispatcher;
import com.zero1tech.chat.base.BaseFragment_MembersInjector;
import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class FriendsFragment_MembersInjector implements MembersInjector<FriendsFragment> {
  private final Provider<AnalyticsDispatcher> dispatcherProvider;

  private final Provider<Prefs> prefsProvider;

  public FriendsFragment_MembersInjector(Provider<AnalyticsDispatcher> dispatcherProvider,
      Provider<Prefs> prefsProvider) {
    this.dispatcherProvider = dispatcherProvider;
    this.prefsProvider = prefsProvider;
  }

  public static MembersInjector<FriendsFragment> create(
      Provider<AnalyticsDispatcher> dispatcherProvider, Provider<Prefs> prefsProvider) {
    return new FriendsFragment_MembersInjector(dispatcherProvider, prefsProvider);
  }

  @Override
  public void injectMembers(FriendsFragment instance) {
    BaseFragment_MembersInjector.injectDispatcher(instance, dispatcherProvider.get());
    injectPrefs(instance, prefsProvider.get());
  }

  @InjectedFieldSignature("com.zero1tech.chat.ui.friends.FriendsFragment.prefs")
  public static void injectPrefs(FriendsFragment instance, Prefs prefs) {
    instance.prefs = prefs;
  }
}
