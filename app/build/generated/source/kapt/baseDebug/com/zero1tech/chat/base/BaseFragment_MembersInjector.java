// Generated by Dagger (https://dagger.dev).
package com.zero1tech.chat.base;

import com.zero1tech.chat.AnalyticsDispatcher;
import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class BaseFragment_MembersInjector implements MembersInjector<BaseFragment> {
  private final Provider<AnalyticsDispatcher> dispatcherProvider;

  public BaseFragment_MembersInjector(Provider<AnalyticsDispatcher> dispatcherProvider) {
    this.dispatcherProvider = dispatcherProvider;
  }

  public static MembersInjector<BaseFragment> create(
      Provider<AnalyticsDispatcher> dispatcherProvider) {
    return new BaseFragment_MembersInjector(dispatcherProvider);
  }

  @Override
  public void injectMembers(BaseFragment instance) {
    injectDispatcher(instance, dispatcherProvider.get());
  }

  @InjectedFieldSignature("com.zero1tech.chat.base.BaseFragment.dispatcher")
  public static void injectDispatcher(BaseFragment instance, AnalyticsDispatcher dispatcher) {
    instance.dispatcher = dispatcher;
  }
}
