// Generated by data binding compiler. Do not edit!
package com.zero1tech.chat.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ProgressBar;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import androidx.recyclerview.widget.RecyclerView;
import com.zero1tech.chat.R;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class FragmentRoomsBinding extends ViewDataBinding {
  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final RecyclerView rvRoomPrivate;

  @NonNull
  public final RecyclerView rvRoomPublic;

  @NonNull
  public final AppCompatTextView tvPrivateRoom;

  @NonNull
  public final AppCompatTextView tvPublicRoom;

  @Bindable
  protected Boolean mIsProgress;

  @Bindable
  protected Boolean mIsPrivate;

  @Bindable
  protected Boolean mIsPublic;

  protected FragmentRoomsBinding(Object _bindingComponent, View _root, int _localFieldCount,
      ProgressBar progressBar, RecyclerView rvRoomPrivate, RecyclerView rvRoomPublic,
      AppCompatTextView tvPrivateRoom, AppCompatTextView tvPublicRoom) {
    super(_bindingComponent, _root, _localFieldCount);
    this.progressBar = progressBar;
    this.rvRoomPrivate = rvRoomPrivate;
    this.rvRoomPublic = rvRoomPublic;
    this.tvPrivateRoom = tvPrivateRoom;
    this.tvPublicRoom = tvPublicRoom;
  }

  public abstract void setIsProgress(@Nullable Boolean isProgress);

  @Nullable
  public Boolean getIsProgress() {
    return mIsProgress;
  }

  public abstract void setIsPrivate(@Nullable Boolean isPrivate);

  @Nullable
  public Boolean getIsPrivate() {
    return mIsPrivate;
  }

  public abstract void setIsPublic(@Nullable Boolean isPublic);

  @Nullable
  public Boolean getIsPublic() {
    return mIsPublic;
  }

  @NonNull
  public static FragmentRoomsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_rooms, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static FragmentRoomsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<FragmentRoomsBinding>inflateInternal(inflater, R.layout.fragment_rooms, root, attachToRoot, component);
  }

  @NonNull
  public static FragmentRoomsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_rooms, null, false, component)
   */
  @NonNull
  @Deprecated
  public static FragmentRoomsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<FragmentRoomsBinding>inflateInternal(inflater, R.layout.fragment_rooms, null, false, component);
  }

  public static FragmentRoomsBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static FragmentRoomsBinding bind(@NonNull View view, @Nullable Object component) {
    return (FragmentRoomsBinding)bind(component, view, R.layout.fragment_rooms);
  }
}
